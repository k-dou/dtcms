INSERT INTO `config` VALUES ('在路上', 'www.k-dou.com', 'Janko', '10000', '个人博客,bolg,蝌蚪', '个人博客', 'default', '#38928c', 000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001, '2', '3', 00000000000000000003, 00000000000000000000, 00000000000000000000, '\\uploads\\template_logo\\20190902\\14c0dc3d2e760a98cc1c6e10420be713.jpg', '杨先生', '', 'kyangmail@foxmail.com', '10000', 2147483647, 2147483647, '北京市丰台区', '2019-09-02 18:40:42');
INSERT INTO `config_tag` VALUES (1, '问题', NULL, 1573014193);
INSERT INTO `config_tag` VALUES (2, 'git', NULL, 1573014193);
INSERT INTO `config_tag` VALUES (3, 'thinkphp', NULL, 1573118054);
INSERT INTO `config_tag` VALUES (4, 'mysql', NULL, 1573118688);
INSERT INTO `article` VALUES (1, 'git merge后，退回', '今天将Demo1分支合并到wqqs-test分支后，发现代码有问题。想退回。', 2, '', '#### 缘由\r\n今天将Demo1分支合并到wqqs-test分支后，发现代码有问题。想退回。\r\n####解决方法\r\n第一步：git checkout到你要恢复的那个分支上\r\n\r\n    git checkout develop\r\n	\r\n第二步：git reflog查出要回退到merge前的版本号\r\n\r\n    git reflog\r\n	\r\n第三步：git reset --hard [版本号]就回退到merge前的代码状态了\r\n\r\n    git reset --hard f82cfd2\r\n    \r\n\r\n', 1, 1, '2019-11-06 12:24:01');
INSERT INTO `article` VALUES (2, 'php: 通过key获取多维数组中的值', '通过多维数组中的key获取value', 2, '', '### 通过多维数组中的key获取value\r\n假设有以下多维数组\r\n\r\n$array = [\r\n    \'zero\'=>[\r\n        \'e\'=>\'ss\', \r\n        \'f\'=>\'dd\',\r\n        ],\r\n    \'e\'=>\'111\', \r\n    \'second\'=>\'222\', \r\n    \'third\'=>\'333\'\r\n];\r\n\r\n如果知道了多维数组中的某个key值， 我们可以用递归来获取这个key对应的value，但除了递归，我们还可以用array_walk_recursive函数来完成这个操作\r\n\r\n    /** Obtain the value by key\r\n     *\r\n     *  \r\n     */\r\n    function recur($key, $array){\r\n        $data = [];\r\n        array_walk_recursive($array, function ($v, $k) use ($key, &$data) {\r\n            if ($k == $key) {\r\n                array_push($data, $v);\r\n            }\r\n        });\r\n        \r\n        return $data;\r\n    }\r\n        \r\n    $data = recur(\'e\', $array);\r\n    print_r($data);\r\n	\r\n	\r\narray_walk_recursive函数有两个参数， 第一个参数使我们要处理的数组，第二个参数是一个回调函数，这是一个我们自定义的函数。在这个函数中，我们设定 如果$k等于我们给定的key键值，就将这个key所对应的值value加入到$data数组中。\r\n### 其他函数\r\n类似的函数还有array_walk，但这个函数只能应用一维数组，要是用多维数组，用array_walk_recursive更好', 1, 1, '2019-11-07 14:20:39');
INSERT INTO `article` VALUES (3, 'PHP三元/三目运算符的使用例子', 'php中三元运算符又被叫做三目运算符了,其实我常把它叫作问号运行符其实都可以这样做,三元运算符可以实现简单的条件判断功能,下在我来给各位介绍一些三元运算符的例子.', 2, '', 'php中三元运算符又被叫做三目运算符了,其实我常把它叫作问号运行符其实都可以这样做,三元运算符可以实现简单的条件判断功能,下在我来给各位介绍一些三元运算符的例子.\r\n三元运算符的功能与“if....else”流程语句一致,它在一行中书写,代码精练、执行效率高,在PHP程序中恰当地使用三元运算符能够让脚本更为简洁、高效,代码的语法如下:\r\n\r\n(expr1)?(expr2):(expr3); //表达式1?表达式2:表达式3\r\n\r\n##### 解释:如果条件“expr1”成立,则执行语句“expr2”,否则执行“expr3”,代码如下:\r\n\r\n    <!--?PHP \r\n    \r\n        $a=10; $b=20; \r\n    \r\n        $c=$a-->$b?($a-$b):($a+$b); \r\n    \r\n        //说明：如果变量a大于变量b则执行问号后面的,否则就执行:冒号后面的 \r\n    \r\n        echo $c; \r\n		\r\n表达式里可以是函数、数组等等.\r\n\r\n事实上,三元运算符可以扩展使用,当设置的条件成立或不成立,执行语句都可以不止一句,试看以下格式:\r\n\r\n(expr1) ? (expr2).(expr3) : (expr4).(expr5);\r\n\r\n我们非常明显地看到,多个执行语句可以使用用字符串运算符号（“.”）连接起来,各执行语句用小角括号包围起来以表明它是一个独立而完整的执行语句,这样扩展后它的功能更为逼近“if...else”流程语句.\r\n\r\n同时三元运算符还可以嵌套使用,例如,a大于b成立时:如果a小于c,那么x=c-a否则x=a-c；否则a小于b成立时:如果b小于c,那么x=c-b否则x=b-c:\r\n\r\n$a>$b ? $x=($a<$c ? $c-$a : $a-$c) : $x=($b<$c ? $c-$b : $b-$c);\r\n\r\n嵌套使用的三元运算符可读性不太好,日后对代码的维护极可能存在问题,所以像这种情况我们还是直接使用if else if 来实现吧.', 1, 1, '2019-11-07 14:26:28');
INSERT INTO `article` VALUES (4, 'layui 集成 editor.md 富文本编辑器', 'layui 是国产对后端程序员友好的前端UI框架，贤心大佬的作品，editor.md 是国产功能非常全面的Markdown富文本编辑器，pandao大佬的作品。但是目前，layui并没有一款牛逼的富文本编辑器，本博客介绍如何在layui中集成使用editor.md富文本编辑器，两位国产大佬到底能擦出怎样的火花呢，见下文吧', 2, '', '### 前言\r\n\r\nlyaui 是国产对后端程序员友好的前端UI框架，贤心大佬的作品，editor.md 是国产功能非常全面的Markdown富文本编辑器，pandao大佬的作品。但是目前，layui并没有一款牛逼的富文本编辑器，本博客介绍如何在layui中集成使用editor.md富文本编辑器，两位国产大佬到底能擦出怎样的火花呢，见下文吧。。。。\r\n\r\nHow to get?\r\n\r\n###### layui下载地址\r\n\r\nhttps://www.layui.com/\r\n\r\n###### editor.md下载地址\r\n\r\nhttp://pandao.github.io/editor.md/\r\n\r\n创建index.html\r\n\r\n引入样式文件\r\n\r\n 	<link rel=\"stylesheet\" href=\"layui/css/layui.css\">\r\n 	<link rel=\"stylesheet\" href=\"editormd/css/editormd.min.css\" />\r\n	\r\n引入脚本，注意一定要引入jquery，editor.md依赖jquery\r\n\r\n	<script src=\"jquery.min.js\"></script>\r\n	<script src=\"layui/layui.js\"></script>\r\n	<script src=\"editormd/js/editormd.min.js\"></script>\r\n	\r\n	\r\n我给的案例是在 layui 的弹出框中渲染 editormd 富文本编辑器，在测试过程中，使用layui type 1类型的弹出框形式，如果页面加载的时候就对富文本编辑器进行了渲染，当打开弹出框的时候，编辑器会出现样式混乱的问题，此案例也算是前车之鉴吧，非弹出框的形式应该不存在此类问题，具体解决思路见代码。\r\n具体的代码：\r\n\r\n	<!DOCTYPE html>\r\n	<html lang=\"en\">\r\n	<head>\r\n		<meta charset=\"UTF-8\">\r\n		<title>layui 集成 editormd 富文本编辑器</title>\r\n		<link rel=\"stylesheet\" href=\"layui/css/layui.css\">\r\n		<link rel=\"stylesheet\" href=\"editormd/css/editormd.min.css\" />\r\n		<!-- 页面解析markdown为HTML显示需要的css -->\r\n		<link rel=\"stylesheet\" href=\"editormd/css/editormd.preview.min.css\" />\r\n	</head>\r\n	<body>\r\n	<!-- 弹出框 -->\r\n	<div id=\"myeditor\" style=\"display: none\">\r\n		<!-- 富文本编辑器 -->\r\n		<div id=\"test-editormd\"></div>\r\n	</div>\r\n\r\n	<!-- 页面解析markdown为HTML显示 -->\r\n	<div id=\"markdownToHTML\" style=\"margin-left: 100px\">\r\n		<textarea id=\"content\" style=\"display:none;\" placeholder=\"markdown语言\"></textarea>\r\n	</div>\r\n\r\n	<div class=\"layui-btn-container\" style=\"margin: 10px\">\r\n		<button id=\"showEditor\" class=\"layui-btn\">显示编辑器</button>\r\n		<button id=\"getMarkdownContent\" class=\"layui-btn\">获取Markdown源码</button>\r\n		<button id=\"getHtmlContent\" class=\"layui-btn\">获取Html源码</button>\r\n		<button id=\"showHTML\" class=\"layui-btn\">Markdown解析成HTML</button>\r\n	</div>\r\n\r\n	<script src=\"jquery.min.js\"></script>\r\n	<script src=\"layui/layui.js\"></script>\r\n	<script src=\"editormd/js/editormd.min.js\"></script>\r\n\r\n	<!-- 页面markdown解析成HTML需要的js -->\r\n	<script src=\"editormd/lib/marked.min.js\"></script>\r\n	<script src=\"editormd/lib/prettify.min.js\"></script>\r\n	<script src=\"editormd/lib/raphael.min.js\"></script>\r\n	<script src=\"editormd/lib/underscore.min.js\"></script>\r\n	<script src=\"editormd/lib/sequence-diagram.min.js\"></script>\r\n	<script src=\"editormd/lib/flowchart.min.js\"></script>\r\n	<script src=\"editormd/lib/jquery.flowchart.min.js\"></script>\r\n\r\n	<script type=\"text/javascript\">\r\n		layui.use([\'layer\', \'jquery\'], function(){\r\n			var layer = layui.layer\r\n				, $= layui.jquery;\r\n\r\n			var testEditor;\r\n			$(\'#showEditor\').on(\'click\', function(){\r\n				// 弹出框\r\n				layer.open({\r\n					type: 1\r\n					,content: $(\'#myeditor\')\r\n					,btn: \'关闭全部\'\r\n					,btnAlign: \'c\' //按钮居中\r\n					,shade: 0 //不显示遮罩\r\n					,area: [\'1600px\', \'800px\']\r\n					,yes: function(){\r\n						layer.closeAll();\r\n					},\r\n					success:function () {\r\n						testEditor = editormd(\"test-editormd\", {\r\n							width: \"90%\",\r\n							height: 740,\r\n							path : \'editormd/lib/\',\r\n							theme : \"default\",\r\n							previewTheme : \"default\",\r\n							editorTheme : \"default\",\r\n							//markdown : md,             // 初始化编辑区的内容\r\n							codeFold : true,\r\n							//syncScrolling : false,\r\n							saveHTMLToTextarea : true,    // 保存 HTML 到 Textarea\r\n							searchReplace : true,\r\n							//watch : false,                // 关闭实时预览\r\n							htmlDecode : \"style,script,iframe|on*\",            // 开启 HTML 标签解析，为了安全性，默认不开启\r\n							//toolbar  : false,             //关闭工具栏\r\n							//previewCodeHighlight : false, // 关闭预览 HTML 的代码块高亮，默认开启\r\n							emoji : true,\r\n							taskList : true,\r\n							tocm            : true,         // Using [TOCM]\r\n							tex : true,                   // 开启科学公式TeX语言支持，默认关闭\r\n							flowChart : true,             // 开启流程图支持，默认关闭\r\n							sequenceDiagram : true,       // 开启时序/序列图支持，默认关闭,\r\n							//dialogLockScreen : false,   // 设置弹出层对话框不锁屏，全局通用，默认为true\r\n							//dialogShowMask : false,     // 设置弹出层对话框显示透明遮罩层，全局通用，默认为true\r\n							//dialogDraggable : false,    // 设置弹出层对话框不可拖动，全局通用，默认为true\r\n							//dialogMaskOpacity : 0.4,    // 设置透明遮罩层的透明度，全局通用，默认值为0.1\r\n							//dialogMaskBgColor : \"#000\", // 设置透明遮罩层的背景颜色，全局通用，默认为#fff\r\n							imageUpload : true,\r\n							imageFormats : [\"jpg\", \"jpeg\", \"gif\", \"png\", \"bmp\", \"webp\"],\r\n							imageUploadURL : \"./php/upload.php\", // 文件上传路径，返回值为图片加载的路径\r\n							onload : function() {\r\n								// 加载后富文本编辑器成功后的回调\r\n								console.log(\'onload\', this);\r\n								//this.fullscreen();\r\n								//this.unwatch();\r\n								//this.watch().fullscreen();\r\n\r\n								//this.setMarkdown(\"#PHP\");\r\n								//this.width(\"100%\");\r\n								//this.height(480);\r\n								//this.resize(\"100%\", 640);\r\n\r\n								// 异步请求md文件，用于编辑时的数据回显\r\n								$.get(\'test.md\', function(md) {\r\n									testEditor.setMarkdown(md);\r\n								});\r\n							}\r\n						});\r\n					}\r\n				});\r\n			});\r\n\r\n			// 获取markdown源码\r\n			$(\'#getMarkdownContent\').on(\'click\', function () {\r\n				var mdContent = $(\'.editormd-markdown-textarea\').val();\r\n				console.log(mdContent);\r\n				var content = testEditor.getMarkdown();\r\n				console.log(content);\r\n			});\r\n			// 获取解析后的html\r\n			$(\'#getHtmlContent\').on(\'click\', function () {\r\n				var content = testEditor.getHTML();\r\n\r\n				console.log(content);\r\n			});\r\n\r\n			// 页面解析markdown为html进行显示\r\n			$(\'#showHTML\').on(\'click\', function () {\r\n				// 模拟从数据库中取内容\r\n				$.get(\'test.md\', function(md) {\r\n					// 给textarea赋值\r\n					$(\'#content\').val(md);\r\n					// 解析\r\n					editormd.markdownToHTML(\"markdownToHTML\", {\r\n						htmlDecode      : \"style,script,iframe\",\r\n						emoji           : true,  // 解析表情\r\n						taskList        : true,  // 解析列表\r\n						tex             : true,  // 默认不解析\r\n						flowChart       : true,  // 默认不解析\r\n						sequenceDiagram : true  // 默认不解析\r\n					});\r\n				});\r\n			});\r\n		});\r\n	</script>\r\n	</body>\r\n	</html>\r\n	\r\n富文本编辑器会在准备的div中进行渲染（注意 div 的 id 需要与初始化编辑器代码中的 id 一致），并自动创建两个 textarea 标签存放 Markdown 源码以及解析后的 html ，打开浏览器调试可以看到。\r\n\r\n	<!-- 富文本编辑器 -->\r\n	<div id=\"test-editormd\"></div>\r\n	\r\n### 获取数据\r\n\r\n###### 方式1，通过调用方法获取（推荐）：\r\n\r\n	testEditor.getMarkdown();       // 获取 Markdown 源码\r\n	testEditor.getHTML();           // 获取 Textarea 保存的 HTML 源码\r\n	testEditor.getPreviewedHTML();  // 获取预览窗口里的 HTML，在开启 watch 且没有开启 saveHTMLToTextarea 时使用\r\n	\r\n###### 方式2，jquery的类选择器进行获取（无法在编辑器渲染成功的回调中使用 jquery 给 textarea 输入框赋值的方式进行回显）：\r\n\r\n	var htmlContent = $(\'.editormd-html-textarea\').val();\r\n	var mdContent = $(\'.editormd-markdown-textarea\').val();\r\n	\r\n### 数据回显\r\n###### 方式1，通过调用方法编辑回显md文件，（推荐）：\r\n\r\n	testEditor.setMarkdown(md);\r\n	\r\n###### 方式2，需要预先在页面的 div下添加以下内容进行数据回显\r\n\r\n	<textarea class=\"editormd-markdown-textarea\" placeholder=\"Enjoy Markdown! coding now...\" name=\"test-editormd-markdown-doc\" style=\"display: none;\">${content}</textarea>\r\n	<textarea class=\"editormd-html-textarea\" name=\"test-editormd-html-code\"></textarea>\r\n	\r\n###### 方式3，使用 jquery 给 textarea 赋值（不能写在编辑器的回调方法 onload 中）\r\n\r\n	$(\'.editormd-markdown-textarea\').val(\'回显的内容\');\r\n	\r\n### 页面解析 markdown 源码显示 HTML\r\n\r\n##### 记得需要另外引入以下文件\r\n\r\n	<!-- 页面解析markdown为HTML显示需要的css -->\r\n	<link rel=\"stylesheet\" href=\"editormd/css/editormd.preview.min.css\" />\r\n	<!-- markdown解析成HTML显示需要的js -->\r\n	<script src=\"editormd/lib/marked.min.js\"></script>\r\n	<script src=\"editormd/lib/prettify.min.js\"></script>\r\n	<script src=\"editormd/lib/raphael.min.js\"></script>\r\n	<script src=\"editormd/lib/underscore.min.js\"></script>\r\n	<script src=\"editormd/lib/sequence-diagram.min.js\"></script>\r\n	<script src=\"editormd/lib/flowchart.min.js\"></script>\r\n	<script src=\"editormd/lib/jquery.flowchart.min.js\"></script>\r\n	\r\n创建显示位置\r\n\r\n	<!-- 页面解析markdown为HTML显示 -->\r\n	<div id=\"markdownToHTML\" style=\"margin-left: 100px\">\r\n		<textarea id=\"content\" style=\"display:none;\" placeholder=\"markdown语言\"></textarea>\r\n	</div>\r\n	\r\n进行解析\r\n\r\n	// 给textarea赋值\r\n	$(\'#content\').val(md);\r\n	// 解析\r\n	editormd.markdownToHTML(\"markdownToHTML\", {\r\n		htmlDecode      : \"style,script,iframe\",\r\n		emoji           : true,  // 解析表情\r\n		taskList        : true,  // 解析列表\r\n		tex             : true,  // 默认不解析\r\n		flowChart       : true,  // 默认不解析\r\n		sequenceDiagram : true  // 默认不解析\r\n	});\r\n	\r\n如果在弹出框中进行预览,需要先清空div，再添加 textarea 用于存放回显的 md 源码, 解决在弹出框中进行预览时，第二次预览无法获取 textarea 的问题。\r\n\r\n	// 先清空，再添加 textarea 用于存放回显的 md 源码, 解决在弹出框中进行预览时，第二次预览无法刷新的问题\r\n	$(\'#markdownToHTML\').empty();\r\n	$(\'#markdownToHTML\').append(\'<textarea id=\"content\" style=\"display:none;\" placeholder=\"markdown语言\"></textarea>\');\r\n	\r\n\r\n\r\n原文链接：https://blog.csdn.net/itchuangyi/article/details/85101305', 1, 1, '2019-11-07 14:44:33');
INSERT INTO `article` VALUES (5, 'PHP 匿名函数 function use 与直接传参的区别', '在项目中看到这种写法，去手册看了一下实例，开始看的有些晕。\r\n\r\n以下是PHP示例代码：', 2, '', '在项目中看到这种写法，去手册看了一下实例，开始看的有些晕。\r\n\r\n以下是PHP示例代码：\r\n\r\n	<?php\r\n	$message = \'hello\';\r\n\r\n	// 没有 \"use\"\r\n	$example = function () {\r\n		var_dump($message);\r\n	};\r\n	echo $example();\r\n\r\n	// 继承 $message\r\n	$example = function () use ($message) {\r\n		var_dump($message);\r\n	};\r\n	echo $example();\r\n\r\n	// Inherited variable\'s value is from when the function\r\n	// is defined, not when called\r\n	$message = \'world\';\r\n	echo $example();\r\n\r\n	// Reset message\r\n	$message = \'hello\';\r\n\r\n	// Inherit by-reference\r\n	$example = function () use (&$message) {\r\n		var_dump($message);\r\n	};\r\n	echo $example();\r\n\r\n	// The changed value in the parent scope\r\n	// is reflected inside the function call\r\n	$message = \'world\';\r\n	echo $example();\r\n\r\n	// Closures can also accept regular arguments\r\n	$example = function ($arg) use ($message) {\r\n		var_dump($arg . \' \' . $message);\r\n	};\r\n	$example(\"hello\");\r\n	?>\r\n以上代码输出：\r\n\r\nNotice: Undefined variable: message in /example.php on line 6\r\nNULL\r\nstring(5) \"hello\"\r\nstring(5) \"hello\"\r\nstring(5) \"hello\"\r\nstring(5) \"world\"\r\nstring(11) \"hello world\"\r\n在第三个echo的时候，程序先改变了$message的值，但是输出仍然为 \"hello\"，而非\"word\"。\r\n\r\n##### 由此可见use的参数继承的值是在匿名函数创建的时候就不会再更改了。除非在参数前加 & ，但这样的话跟直接传参没有多大的区别，那么use也没有意义了。\r\n\r\n原文链接：https://blog.csdn.net/gezipml/article/details/83069561', 1, 1, '2019-11-07 16:50:52');
INSERT INTO `article` VALUES (6, '如何使用php实现一个对数字进行8位的加密解密函数', '对数字进行加密，比如对666进行加密，得到uiu2k1i2等类似的无特殊符号的字符', 2, '', '### 缘由\r\n因为项目中需要生成邀请码。上级的邀请码即为下级的推荐码。需要从推荐码中反编译出上级uid。\r\n##### 方式一：\r\n	$a = 666;\r\n	$key = \"NWQTOwxUCU6FCbOsiod8Jasqw0GbuvoP\";\r\n\r\n	function decrypt($string, $key) {\r\n		$result = \'\';\r\n		$string = base64_decode($string);\r\n		for($i=0; $i<strlen($string); $i++) {\r\n			$char = substr($string, $i, 1);\r\n			$keychar = substr($key, ($i % strlen($key))-1, 1);\r\n			$char = chr(ord($char)-ord($keychar));\r\n			$result.=$char;\r\n		}\r\n		return $result;\r\n	}\r\n\r\n	function encrypt($string, $key) {\r\n		$result = \'\';\r\n		for($i=0; $i<strlen($string); $i++) {\r\n			$char = substr($string, $i, 1);\r\n			$keychar = substr($key, ($i % strlen($key))-1, 1);\r\n			$char = chr(ord($char)+ord($keychar));\r\n			$result.=$char;\r\n		}\r\n		return base64_encode($result);\r\n	}\r\n\r\n\r\n	$epy = encrypt($a, $key);\r\n\r\n	var_dump($epy);\r\n\r\n	var_dump(decrypt($epy, $key));\r\n	\r\n##### 方式二：\r\n\r\n	function alphaID($in, $to_num = false, $pad_up = false, $passKey = null)\r\n	{\r\n		$key = \'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\';\r\n		$i = array(\'a\',\'b\',\'c\',\'d\',\'e\',\'f\',\'g\',\'h\',\'i\',\'j\',\'k\',\'l\',\'m\',\'n\',\'o\',\'p\',\'q\',\'r\',\'s\',\'t\',\'u\',\'v\',\'w\',\'x\',\'y\',\'z\',\'0\',\'1\',\'2\',\'3\',\'4\',\'5\',\'6\',\'7\',\'8\',\'9\',\'A\',\'B\',\'C\',\'D\',\'E\',\'F\',\'G\',\'H\',\'I\',\'J\',\'K\',\'L\',\'M\',\'N\',\'O\',\'P\',\'Q\',\'R\',\'S\',\'T\',\'U\',\'V\',\'W\',\'X\',\'Y\',\'Z\');\r\n		if ($passKey !== null) {\r\n		   $len = strlen($key); \r\n\r\n			$passhash = hash(\'sha256\',$passKey);\r\n			$passhash = (strlen($passhash) < $len)\r\n				? hash(\'sha512\',$passKey)\r\n				: $passhash;\r\n\r\n			for ($n=0; $n < $len; $n++) {\r\n				$p[] = substr($passhash, $n ,1);\r\n			}\r\n\r\n			array_multisort($p, SORT_DESC, $i);\r\n			$key = implode($i);\r\n		}\r\n\r\n		$base = strlen($key);\r\n\r\n		if ($to_num) {\r\n			$in = strrev($in);\r\n			$out = 0;\r\n			$len = strlen($in) - 1;\r\n			for ($t = 0; $t <= $len; $t++) {\r\n				$bcpow = bcpow($base, $len - $t);\r\n				$out = $out + strpos($key, substr($in, $t, 1)) * $bcpow;\r\n			}\r\n\r\n			if (is_numeric($pad_up)) {\r\n				$pad_up--;\r\n				if ($pad_up > 0) {\r\n					$out -= pow($base, $pad_up);\r\n				}\r\n			}\r\n		} else {\r\n			// Digital number -->> alphabet letter code\r\n			if (is_numeric($pad_up)) {\r\n				$pad_up--;\r\n				if ($pad_up > 0) {\r\n					$in += pow($base, $pad_up);\r\n				}\r\n			}\r\n\r\n			$out = \"\";\r\n			for ($t = floor(log10($in) / log10($base)); $t >= 0; $t--) {\r\n				$a = floor($in / bcpow($base, $t));\r\n				$out = $out . substr($key, $a, 1);\r\n				$in = $in - ($a * bcpow($base, $t));\r\n			}\r\n			$out = strrev($out); // reverse\r\n		}\r\n\r\n		return $out;\r\n	}\r\n\r\n	$random_id=728559;\r\n	$encode=alphaID($random_id, false, 12);\r\n	$decode=alphaID($encode,true, 12);\r\n\r\n	echo \"Encode : {$encode} <br> Decode : {$decode}\";\r\n	\r\n如果单纯的只要小写部分，直接调整$key = \'abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\'移除大写字母。\r\n该方法参考yutube 链接生成.', 1, 1, '2019-11-07 17:03:07');
INSERT INTO `article` VALUES (7, 'Thinkphp5.1 自定义标签（Taglib）', '在TP框架中，我们一般是在控制器定义变量，并将变量渲染到视图里输出。然而，本次要介绍的是用自定义标签输出变量。在进行cms开发中，前台页面的数据输出一般是靠自定义的标签，进行输出。', 2, '', '在TP框架中，我们一般是在控制器定义变量，并将变量渲染到视图里输出。然而，本次要介绍的是用自定义标签输出变量。在进行cms开发中，前台页面的数据输出一般是靠自定义的标签，进行输出。\r\nTP框架的视图工作流程：把控制器中定义的变量或者自定义标签的变量，渲染到页面模板；接着，TP框架会编译视图页面，把生成php文件放在项目下runtime\\temp目录里（TP框架的运行文件）；最后当用户访问时，调用运行文件里的php文件，显示到用户界面里。\r\n\r\n### 自定义标签\r\n1 、自定义的标签，一般是放在公共模块里，即在common模块下新建目录taglib（用存放自定义标签库）；\r\n2、在taglib目录下创建Demo.php继承app\\common\\taglib的TagLib类，代码如下\r\n\r\n	<?php\r\n	namespace app\\common\\taglib;\r\n	use think\\template\\TagLib;\r\n	class Demo extends TagLib{\r\n		/**\r\n		 * 定义标签列表\r\n		 */\r\n		protected $tags   =  [\r\n			/**标签定义\r\n			* attr：属性列表\r\n			* close：是否闭合（0表示闭合，1表示不闭合。默认值为1）\r\n			* alias：标签别名\r\n			* level：嵌套层次\r\n			*/\r\n			\'sitename\'     => [\'attr\' => \'name\', \'close\' => 0],//闭合标签\r\n			\'keyword\'      => [\'attr\' => \'key\', \'close\' => 1], //不闭合标签\r\n\r\n		];\r\n\r\n		/**\r\n		 * 闭合标签\r\n		 * $tag：存放标签属性的数组\r\n		 */\r\n		public function sitename($tag)\r\n		{\r\n			return \'网站名称：\'.$tag[\'name\'];\r\n		}\r\n\r\n		/**\r\n		 * 不闭合标签\r\n		 * $tag：存放标签属性的数组\r\n		 * $content：标签内的数据\r\n		 */\r\n		public function keyword($tag,$content)\r\n		{\r\n			return \'网站关键词：\'.$tag[\'key\'].$content;\r\n		}\r\n	}\r\n	\r\n	\r\n### 如何使用自定义标签\r\n\r\n首先，在使用标签前需要配置标签，不然无法使用，在TP 5.1项目中配置自定义的标签。\r\n\r\n\r\n- 方法一、打开项目下config\\template.php配置文件，在配置文件中添加如下配置：\r\n\r\n\r\n	\'taglib_build_in\' => \'cx,app\\common\\taglib\\Demo\',\r\n	\r\n	\r\n**注意：cx是框架默认的标签库，配置的标签库必须添加命名空间。这种方法配置的标签库，在使用的时候不用添加标签的命名空间（即标签库名）。**\r\n\r\n例如，news标签\r\n\r\n	{news num=\'10\'}{$titile}{/news}\r\n	\r\n- 方法二、打开项目下config\\template.php配置文件，在配置文件中添加如下配置：\r\n\r\n\r\n	\'taglib_pre_load\' => \'app\\common\\taglib\\Demo\',\r\n	\r\n**	\r\n注意：这种方法配置的标签库，在使用的时候需要添加标签的命名空间（即标签库名）。**\r\n\r\n其次，可以在模板文件里使用上面定义的标签，如下：\r\n方法一的使用：\r\n\r\n	{sitename name=\'新浪微博\'/}\r\n	{keyword key=\'新浪,微博\'}\r\n		我在关键词后面。\r\n	{/keyword}\r\n	\r\n方法二的使用：\r\n\r\n	{Demo:sitename name=\'新浪微博\'/}\r\n	{Demo:keyword key=\'新浪,微博\'}\r\n		我在关键词后面。\r\n	{/Demo:keyword}\r\n\r\n\r\n链接：https://www.jianshu.com/p/f17a889310ec\r\n', 1, 1, '2019-11-07 17:14:14');
INSERT INTO `article` VALUES (8, '[ERR] 1273 - Unknown collation: \'utf8mb4_0900_ai_ci\' 报错', '使用navicate12运行sql文件出错', 2, '', '### 缘由\r\n\r\n使用navicate12运行sql文件出错\r\n报错：\r\n\r\n	[ERR] 1273 - Unknown collation: \'utf8mb4_0900_ai_ci\'\r\n	\r\n### 报错原因：\r\n生成转储文件的数据库版本为8.0,要导入sql文件的数据库版本为5.6,因为是高版本导入到低版本，引起1273错误\r\n\r\n### 解决方法：\r\n打开sql文件，将文件中的所有\r\nutf8mb4_0900_ai_ci替换为utf8_general_ci\r\nutf8mb4替换为utf8\r\n保存后再次运行sql文件，运行成功\r\n', 1, 1, '2019-11-07 17:24:48');
INSERT INTO `article` VALUES (9, 'git warning: LF will be replaced by CRLF in 解决办法', '在使用git的时候，每次执行\r\n\r\n#git add \"目录\"\r\n\r\ngit add .\r\n\r\n都会提示这样一个警告消息：\r\n\r\nwarning: LF will be replaced by CRLF in XXXXXXXXXXXXXX.\r\n\r\n虽然说没有什么影响吧。\r\n\r\n不过就是觉得太碍眼了，\r\n\r\n按照这样设置就没有问题了:\r\n\r\ngit config core.autocrlf false\r\n\r\n这样设置git的配置后在执行add操作就没有问题了。\r\n\r\n \r\n\r\n不要在该奋斗的年纪选', 2, '', '### 缘由\r\n在使用git的时候，每次执行\r\n\r\n	#git add \"目录\"\r\n\r\n	git add .\r\n\r\n都会提示这样一个警告消息：\r\n\r\n`warning: LF will be replaced by CRLF in XXXXXXXXXXXXXX.`\r\n\r\n虽然说没有什么影响吧。\r\n\r\n不过就是觉得太碍眼了，\r\n\r\n### 解决\r\n\r\n按照这样设置就没有问题了:\r\n\r\n	git config core.autocrlf false\r\n\r\n这样设置git的配置后在执行add操作就没有问题了。\r\n\r\n \r\n**\r\n不要在该奋斗的年纪选择去偷懒，只有度过一段连自己都被感动了的日子，才会变成那个最好的自己**.', 1, 1, '2019-11-07 17:49:22');
INSERT INTO `article` VALUES (10, '在Linux上git pull线上仓库代码时，出现error: Your local changes to the following files would be overwritten by me', '在Windows上工作时未出现过该问题，于是通过命令：', 2, '', '### 缘由\r\n\r\n在Linux上git pull线上仓库代码时，出现error: Your local changes to the following files would be overwritten by merge\r\n\r\n### 解决\r\n\r\n在Windows上工作时未出现过该问题，于是通过命令：\r\n\r\n	git diff\r\n查看差异，得到结果：\r\n\r\n	diff --git a/start_crons.sh b/start_crons.sh\r\n	old mode 100644\r\n	new mode 100755\r\n这是由Linux严格的文件系统权限导致。\r\n\r\n通过命令关闭filemode解决:\r\n\r\n	git config core.filemode false', 1, 1, '2019-11-07 17:52:45');
INSERT INTO `article_tag` VALUES (1, 1, 1);
INSERT INTO `article_tag` VALUES (2, 1, 2);
INSERT INTO `article_tag` VALUES (3, 7, 3);
INSERT INTO `article_tag` VALUES (4, 8, 4);
INSERT INTO `article_tag` VALUES (5, 8, 1);
INSERT INTO `article_tag` VALUES (6, 10, 2);
INSERT INTO `category` VALUES (1, 0, '生活记事', 2, 1, '2018-10-24 10:20:05');
INSERT INTO `category` VALUES (2, 0, '技术折腾', 3, 1, '2018-10-24 10:20:34');
INSERT INTO `background` VALUES (1, '\\uploads\\20181024\\1b179fa86439c86731aa9845e1e0fc39.jpg', '\\uploads\\20191105\\d29e09126bbdbd343a88910766af8174.jpg', 1, 1, '2019-11-05 15:03:20');
